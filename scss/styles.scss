$values: (
  auto,
  none,
  manipulation,
  pan-x,
  pan-y,
  pan-left,
  pan-right,
  pan-up,
  pan-down,
  pinch-zoom
);

html {
  box-sizing: border-box;
  height: 100%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

* {
  margin: 0;
  padding: 0;
}

body {
  padding: 2vmax;

  &::after {
    display: block;
    content: 'Scroll page';
    writing-mode: vertical-rl;
    position: fixed;
    height: 100vh;
    text-align: center;
    right: 1vmax;
    font-size: 200%;
  }
}

h1 {
  margin-bottom: 1em;

  &::after {
    display: block;
    content: 'This demo only works on browsers that support the touch-action property.';
    background-color: pink;
    color: maroon;
    border: 2px solid crimson;
    padding: 0.5em;
  }
}

@supports (touch-action: auto) {
  h1::after {
    display: none;
  }
}

h2 {
  margin-bottom: 1.5em;

  &::after {
    content: ' (not supported)';
    color: crimson;
  }
}

main {
  width: calc(100% - 3em);
}

.container {
  display: flex;
  flex-direction: row;
  width: 100%;
  height: 50vh;
  overflow: auto;
  position: relative;

  div {
    min-width: 75%;
    height: 75vh;

  }
}

@media (orientation: landscape) {
  main {
    width: calc(100% - 3em);
    display: flex;
    flex-wrap: wrap;
  }

  section {
    width: 50%;

    &:nth-child(2n) {
      padding-left: 1em;
    }
  }
}

section div:nth-child(1) {
  background-image: linear-gradient(to bottom, #c0392b 0%, #c0392b 50%, #3498db 50%, #3498db 100%);
 }

 section div:nth-child(2) {
  background-image: linear-gradient(to bottom, #f1c40f 0%, #f1c40f 50%, #2ecc71 50%, #2ecc71 100%);
 }

@each $value in $values {
  @supports (touch-action: #{$value}) {
    .#{$value} {
      touch-action: #{$value};

      ~ h2::after {
        display: none;
      }
    }
  }
}
